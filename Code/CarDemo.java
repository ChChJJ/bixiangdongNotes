/*
  面向对象三大特征：1、封装		2、继承		3、多态

  以后的开发就是找对象用。没有对象就创建一个对象用。（找对象、建对象、用对象。维护对象间的关系）
  对象就是多个内容的封装
*/


/*
	类和对象的关系

			现实生活中的对象：  张三、李四。
			想要的描述：  提取对象的共性内容。对具体对象的抽象
			描述（类）时：这些对象的共性有：姓名、年龄、性别、学习功能。

	映射到Java中，描述就是class定义的类。
	具体对象就是对应Java在堆内存中用 new建立的实体
	 ――――对象：存储数据				      ――――实体：凡是用于存储多个数据的

		类：  就是对现实生活中事物的描述
		对象：就是这类事物，实实在在的个体（类是这个对象的描述）
*/

//需求：描述汽车。其实就是在描述事物的属性和行为

//属性对应的是类中的变量，行为对应的是类中的方法（函数）
//其实定义类就是在描述事物，就是定义属性和行为。属性和行为又共同成为类中的成员（成员变量和成员方法）。


/*
	成员变量和局部变量
		成员变量作用于整个类中（成员变量就是全局变量？？）
		局部变量作用于函数中，或语句中
			在内存中的位置：
				成员变量：在堆内存中，因为对象的存在，才在内存中存在。
				局部变量：存在于栈内存中。
			
*/


class Car
{
	//描述颜色
	String color = "blue";  //显示初始化值

	//描述轮胎数
	int number = 4;
		
	//运行行为
	void run()
	{
		System.out.println("车的颜色是："+color + "轮胎数是："+number);
	}

}

class  CarDemo
{
	public static void main(String[] args) 
	{
		  //生产汽车。在Java中通过 new关键字(或操作符)来实现。
		  //其实就是在堆内存中产生一个实体
		Car c = new Car();    //c就是一个类类型变量。 【记住】类类型变量指向对象
		  //c是引用型变量也成为句柄 
		c.run();

		//需求：将已有车的颜色改成蓝色。指挥该对象做使用。在Java指挥方式是：对象.对象成员
		c.color = "pink";
		c.run();

		Car c1 = new Car();
		c1.run(); //blue 4
	}
}
